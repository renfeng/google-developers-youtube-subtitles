1
00:00:00,310 --> 00:00:04,858
安卓1.0在2008年推出
从那时起仅仅六年时间

2
00:00:04,858 --> 00:00:09,880
在平台级别上，发布了11个主要版本
在 Android 开发者网站上

3
00:00:09,880 --> 00:00:13,460
我们通过饼图，展示了各个主要版本
占有的 Android 活跃设备比例

4
00:00:13,460 --> 00:00:18,314
因为饼图很直观
不过，对于我们来说

5
00:00:18,314 --> 00:00:22,700
更方便的是看这个直方图
如果你眯着眼睛

6
00:00:22,700 --> 00:00:27,715
你几乎可以看到一个模糊的钟形曲线
最早的版本在左边

7
00:00:27,715 --> 00:00:31,858
随着设备升级和更新
它们的流行度越来越低

8
00:00:31,858 --> 00:00:36,100
设备占有率最大的在中间

9
00:00:36,100 --> 00:00:40,020
这些是近两年的设备
最新的版本在右边

10
00:00:40,020 --> 00:00:43,470
随着新手机发布和升级
日益普及

11
00:00:43,470 --> 00:00:47,523
考虑到这一点
最低 SDK 像是个门槛

12
00:00:47,523 --> 00:00:51,980
在 Google Play 上
你的应用不会出现在

13
00:00:51,980 --> 00:00:56,660
比指定的最低 SDK 版本低的设备上
为什么不指定一个所有设备都支持的最低 SDK?

14
00:00:56,660 --> 00:01:01,400
通常，你要支持尽可能多的用户

15
00:01:01,400 --> 00:01:05,040
但是，支持一些旧的版本
会有相应的成本

16
00:01:05,040 --> 00:01:07,830
例如，创建不同的执行路径
以兼容为废弃的或已更新的 API

17
00:01:07,830 --> 00:01:12,730
或为不同功能的设备
提供不同的用户交互

18
00:01:12,730 --> 00:01:16,360
你需要在更多的潜在用户和
支持这些用户所需的成本之间取舍

19
00:01:16,360 --> 00:01:21,480
同时，请记住
每个版本都会推出

20
00:01:21,480 --> 00:01:24,900
新的 API 和硬件支持
把你的应用安装到

21
00:01:24,900 --> 00:01:28,190
连你的最基本功能都不支持的设备上
可能没有任何意义

22
00:01:29,220 --> 00:01:33,430
相对而言
目标 SDK 并不是限高杆

23
00:01:33,430 --> 00:01:36,460
只是用来声明你在哪个版本的
平台上测试过你的应用

24
00:01:37,628 --> 00:01:41,060
如果应用指定了 API
就会被将来发布的平台版本所兼容

25
00:01:41,060 --> 00:01:45,650
Android 平台利用目标 SDK
来保证将来的重大更新

26
00:01:45,650 --> 00:01:50,040
符合预期行为
进而确保您的应用可以正常使用

27
00:01:50,040 --> 00:01:54,620
即使用户升级手机系统
如果你是开发一个新的应用

28
00:01:54,620 --> 00:01:58,630
没有任何理由不使用
最新的 Android 版本作为目标

29
00:01:58,630 --> 00:02:02,340
对于已经发布的应用
遇到有平台发布

30
00:02:02,340 --> 00:02:06,610
应尽快更新目标 SDK
并做测试

31
00:02:06,610 --> 00:02:10,570
这样可以利用新平台
提供的优化和改进

